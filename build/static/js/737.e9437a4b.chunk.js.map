{"version":3,"file":"static/js/737.e9437a4b.chunk.js","mappings":"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","sources":["components/button/button.component.tsx","components/button/button.styles.tsx","components/form-input/form-input.styles.tsx","components/form-input/form-input.component.tsx","components/sign-up-form/sign-up-form.styles.tsx","components/sign-up-form/sign-up-form.component.tsx","components/sign-in-form/sign-in-form.styles.tsx","components/sign-in-form/sign-in-form.component.tsx","routes/authentication/authentication.styles.tsx","routes/authentication/authentication.component.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { FC, ButtonHTMLAttributes } from 'react';\n\nimport {\n  BaseButton,\n  GoogleSignInButton,\n  InvertedButton,\n  ButtonSpinner,\n} from './button.styles';\n\nexport enum BUTTON_TYPE_CLASSES {\n  base = 'base',\n  google = 'google-sign-in',\n  inverted = 'inverted',\n}\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton =>\n  ({\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]);\n\nexport type ButtonProps = {\n  buttonType?: BUTTON_TYPE_CLASSES;\n  isLoading?: boolean;\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  buttonType,\n  isLoading,\n  ...otherProps\n}) => {\n  const CustomButton = getButton(buttonType);\n  return (\n    <CustomButton disabled={isLoading} {...otherProps}>\n      {isLoading ? <ButtonSpinner /> : children}\n    </CustomButton>\n  );\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nimport { SpinnerContainer } from '../spinner/spinner.styles';\n\nexport const BaseButton = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: 'Open Sans Condensed';\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nexport const GoogleSignInButton = styled(BaseButton)`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }\n`;\n\nexport const InvertedButton = styled(BaseButton)`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nexport const ButtonSpinner = styled(SpinnerContainer)`\n  width: 30px;\n  height: 30px;\n`;\n","import styled, { css } from 'styled-components';\n\nconst subColor = 'grey';\nconst mainColor = 'black';\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\ntype FormInputLabelProps = {\n  shrink?: boolean;\n};\n\nexport const FormInputLabel = styled.label<FormInputLabelProps>`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  ${({ shrink }) => shrink && shrinkLabelStyles};\n`;\n\nexport const Input = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus ~ ${FormInputLabel} {\n    ${shrinkLabelStyles};\n  }\n`;\n\nexport const Group = styled.div`\n  position: relative;\n  margin: 45px 0;\n\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n","import { InputHTMLAttributes, FC } from 'react';\n\nimport { FormInputLabel, Input, Group } from './form-input.styles';\n\ntype FormInputProps = { label: string } & InputHTMLAttributes<HTMLInputElement>;\n\nconst FormInput: FC<FormInputProps> = ({ label, ...otherProps }) => {\n  return (\n    <Group>\n      <Input {...otherProps} />\n      {label && (\n        <FormInputLabel\n          shrink={Boolean(\n            otherProps.value &&\n              typeof otherProps.value === 'string' &&\n              otherProps.value.length\n          )}\n        >\n          {label}\n        </FormInputLabel>\n      )}\n    </Group>\n  );\n};\n\nexport default FormInput;\n","import styled from 'styled-components';\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n\n  h2 {\n    margin: 10px 0;\n  }\n`;\n","import { useState, FormEvent, ChangeEvent } from 'react';\nimport { AuthError, AuthErrorCodes } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\n\nimport { SignUpContainer } from './sign-up-form.styles';\nimport { signUpStart } from '../../store/user/user.action';\n\nconst defaultFormFields = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst SignUpForm = () => {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { displayName, email, password, confirmPassword } = formFields;\n  const dispatch = useDispatch();\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords do not match');\n      return;\n    }\n\n    try {\n      dispatch(signUpStart(email, password, displayName));\n      resetFormFields();\n    } catch (error) {\n      if ((error as AuthError).code === AuthErrorCodes.EMAIL_EXISTS) {\n        alert('Cannot create user, email already in use');\n      } else {\n        console.log('user creation encountered an error', error);\n      }\n    }\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  return (\n    <SignUpContainer>\n      <h2>Don't have an account?</h2>\n      <span>Sign up with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label='Display Name'\n          type='text'\n          required\n          onChange={handleChange}\n          name='displayName'\n          value={displayName}\n        />\n\n        <FormInput\n          label='Email'\n          type='email'\n          required\n          onChange={handleChange}\n          name='email'\n          value={email}\n        />\n\n        <FormInput\n          label='Password'\n          type='password'\n          required\n          onChange={handleChange}\n          name='password'\n          value={password}\n        />\n\n        <FormInput\n          label='Confirm Password'\n          type='password'\n          required\n          onChange={handleChange}\n          name='confirmPassword'\n          value={confirmPassword}\n        />\n        <Button type='submit'>Sign Up</Button>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nexport default SignUpForm;\n","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n\n  h2 {\n    margin: 10px 0;\n  }\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { useState, FormEvent, ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\n\nimport { SignInContainer, ButtonsContainer } from './sign-in-form.styles';\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from '../../store/user/user.action';\n\nconst defaultFormFields = {\n  email: '',\n  password: '',\n};\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { email, password } = formFields;\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const signInWithGoogle = async () => {\n    dispatch(googleSignInStart());\n  };\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      dispatch(emailSignInStart(email, password));\n      resetFormFields();\n    } catch (error) {\n      console.log('user sign in failed', error);\n    }\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <h2>Already have an account?</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label='Email'\n          type='email'\n          required\n          onChange={handleChange}\n          name='email'\n          value={email}\n        />\n\n        <FormInput\n          label='Password'\n          type='password'\n          required\n          onChange={handleChange}\n          name='password'\n          value={password}\n        />\n        <ButtonsContainer>\n          <Button type='submit'>Sign In</Button>\n          <Button\n            buttonType={BUTTON_TYPE_CLASSES.google}\n            type='button'\n            onClick={signInWithGoogle}\n          >\n            Sign In With Google\n          </Button>\n        </ButtonsContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nexport default SignInForm;\n","import styled from 'styled-components';\n\nexport const AuthenticationContainer = styled.div`\n  display: flex;\n  width: 900px;\n  justify-content: space-between;\n  margin: 30px auto;\n`;\n","import SignUpForm from '../../components/sign-up-form/sign-up-form.component';\nimport SignInForm from '../../components/sign-in-form/sign-in-form.component';\n\nimport { AuthenticationContainer } from './authentication.styles';\n\nconst Authentication = () => {\n  return (\n    <AuthenticationContainer>\n      <SignInForm />\n      <SignUpForm />\n    </AuthenticationContainer>\n  );\n};\n\nexport default Authentication;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["BUTTON_TYPE_CLASSES","children","buttonType","isLoading","otherProps","CustomButton","base","BaseButton","google","GoogleSignInButton","inverted","InvertedButton","getButton","disabled","styled","ButtonSpinner","SpinnerContainer","subColor","shrinkLabelStyles","css","FormInputLabel","shrink","Input","Group","label","Boolean","value","length","SignUpContainer","defaultFormFields","displayName","email","password","confirmPassword","useState","formFields","setFormFields","dispatch","useDispatch","handleSubmit","event","preventDefault","alert","signUpStart","error","code","AuthErrorCodes","console","log","handleChange","target","name","onSubmit","type","required","onChange","SignInContainer","ButtonsContainer","signInWithGoogle","googleSignInStart","emailSignInStart","onClick","AuthenticationContainer","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}