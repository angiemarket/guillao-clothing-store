{"ast":null,"code":"import { call as _call } from \"redux-saga/effects\";\nimport { all as _all } from \"redux-saga/effects\";\nimport { put as _put } from \"redux-saga/effects\";\nimport { takeLatest as _takeLatest } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from './user.types';\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed } from './user.action';\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser } from '../../utils/firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield _call(createUserDocumentFromAuth, userAuth, additionalDetails);\n\n    if (userSnapshot) {\n      yield _put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      }));\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield _call(signInWithGooglePopup);\n    yield _call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const userCredential = yield _call(signInAuthUserWithEmailAndPassword, email, password);\n\n    if (userCredential) {\n      const {\n        user\n      } = userCredential;\n      yield _call(getSnapshotFromUserAuth, user);\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield _call(getCurrentUser);\n    if (!userAuth) return;\n    yield _call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signUp(_ref2) {\n  let {\n    payload: {\n      email,\n      password,\n      displayName\n    }\n  } = _ref2;\n\n  try {\n    const userCredential = yield _call(createAuthUserWithEmailAndPassword, email, password);\n\n    if (userCredential) {\n      const {\n        user\n      } = userCredential;\n      yield _put(signUpSuccess(user, {\n        displayName\n      }));\n    }\n  } catch (error) {\n    yield _put(signUpFailed(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield _call(signOutUser);\n    yield _put(signOutSuccess());\n  } catch (error) {\n    yield _put(signOutFailed(error));\n  }\n}\nexport function* signInAfterSignUp(_ref3) {\n  let {\n    payload: {\n      user,\n      additionalDetails\n    }\n  } = _ref3;\n  yield _call(getSnapshotFromUserAuth, user, additionalDetails);\n}\nexport function* onGoogleSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onCheckUserSession() {\n  yield _takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onEmailSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignUpStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignOutStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield _all([_call(onCheckUserSession), _call(onGoogleSignInStart), _call(onEmailSignInStart), _call(onSignUpStart), _call(onSignUpSuccess), _call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/angel/OneDrive/Pictures/Karen Sutton Hair Studio/guillao-clothing-store/src/store/user/user.saga.ts"],"names":["USER_ACTION_TYPES","signInSuccess","signInFailed","signUpSuccess","signUpFailed","signOutSuccess","signOutFailed","getCurrentUser","createUserDocumentFromAuth","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","createAuthUserWithEmailAndPassword","signOutUser","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","call","put","id","data","error","signInWithGoogle","user","signInWithEmail","payload","email","password","userCredential","isUserAuthenticated","signUp","displayName","signOut","signInAfterSignUp","onGoogleSignInStart","takeLatest","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onSignOutStart","SIGN_OUT_START","userSagas","all"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'typed-redux-saga/macro';\nimport { User } from 'firebase/auth';\n\nimport { USER_ACTION_TYPES } from './user.types';\n\nimport {\n  signInSuccess,\n  signInFailed,\n  signUpSuccess,\n  signUpFailed,\n  signOutSuccess,\n  signOutFailed,\n  EmailSignInStart,\n  SignUpStart,\n  SignUpSuccess,\n} from './user.action';\n\nimport {\n  getCurrentUser,\n  createUserDocumentFromAuth,\n  signInWithGooglePopup,\n  signInAuthUserWithEmailAndPassword,\n  createAuthUserWithEmailAndPassword,\n  signOutUser,\n  AdditionalInformation,\n} from '../../utils/firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(\n  userAuth: User,\n  additionalDetails?: AdditionalInformation\n) {\n  try {\n    const userSnapshot = yield* call(\n      createUserDocumentFromAuth,\n      userAuth,\n      additionalDetails\n    );\n\n    if (userSnapshot) {\n      yield* put(\n        signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n      );\n    }\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield* call(signInWithGooglePopup);\n    yield* call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n}\n\nexport function* signInWithEmail({\n  payload: { email, password },\n}: EmailSignInStart) {\n  try {\n    const userCredential = yield* call(\n      signInAuthUserWithEmailAndPassword,\n      email,\n      password\n    );\n\n    if (userCredential) {\n      const { user } = userCredential;\n      yield* call(getSnapshotFromUserAuth, user);\n    }\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield* call(getCurrentUser);\n    if (!userAuth) return;\n    yield* call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n}\n\nexport function* signUp({\n  payload: { email, password, displayName },\n}: SignUpStart) {\n  try {\n    const userCredential = yield* call(\n      createAuthUserWithEmailAndPassword,\n      email,\n      password\n    );\n\n    if (userCredential) {\n      const { user } = userCredential;\n      yield* put(signUpSuccess(user, { displayName }));\n    }\n  } catch (error) {\n    yield* put(signUpFailed(error as Error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield* call(signOutUser);\n    yield* put(signOutSuccess());\n  } catch (error) {\n    yield* put(signOutFailed(error as Error));\n  }\n}\n\nexport function* signInAfterSignUp({\n  payload: { user, additionalDetails },\n}: SignUpSuccess) {\n  yield* call(getSnapshotFromUserAuth, user, additionalDetails);\n}\n\nexport function* onGoogleSignInStart() {\n  yield* takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onCheckUserSession() {\n  yield* takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onEmailSignInStart() {\n  yield* takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onSignUpStart() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* onSignOutStart() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield* all([\n    call(onCheckUserSession),\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n    call(onSignOutStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}